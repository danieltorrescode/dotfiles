#!/bin/bash

if [ -n "$1" ]
then
    user=$1
else
    echo "Enter user"
    read user
fi
home="/home/$user"

## chmod 744 -R $home/scripts
# #   rwx
# 0   000
# 1   001
# 2   010
# 3   011
# 4   100
# 5   101
# 6   110
# 7   111
# XF86_keyboard_symbols complete list:
# wiki.linuxquestions.org/wiki/XF86_keyboard_symbols
# echo "###########################################"
# echo "drivers"
# echo "###########################################"
# lspci -k | grep VGA
echo "###########################################"
echo "start"
date +'%d/%m/%Y %I:%M:%S'
echo "#######################################################"
echo "updating repositories and installing packages"
echo "#######################################################"
pacman -S --needed --noconfirm archlinux-keyring
pacman -Syu
pacman -S --needed --noconfirm base-devel curl wget wpa_supplicant dhclient dnsmasq openssh \
 xf86-video-amdgpu xf86-video-ati vulkan-radeon \
 libva-mesa-driver mesa-vdpau mesa mesa-demos \
 xorg xorg-xinit xf86-input-synaptics xf86-input-libinput xdo xorg-xbacklight xdotool \
 gnu-free-fonts ttf-hack ttf-liberation ttf-ubuntu-font-family noto-fonts-emoji \
 clang cmake python-pip python-virtualenv go \
 ufw gufw firejail firetools clamav bleachbit apparmor audit lxc keepassxc \
 playerctl pavucontrol pulseaudio pamixer mpv mpd mpc \
 bluez bluez-utils blueman pulseaudio-bluetooth \
 imagemagick arandr slurp swappy grim wl-clipboard flameshot \
 brightnessctl acpi numlockx cronie dunst python-notify2 stow ncdu udisks2 udiskie \
 bash-completion  bash-language-server shellcheck \
 starship fastfetch tmux fzf lsd bat \
 zsh zsh-autosuggestions zsh-completions zsh-syntax-highlighting \
 docker docker-compose qemu-full virt-manager \
 waybar wofi dmenu slock \
 firefox emacs vim alacritty htop \
 nodejs npm unzip \
 thunar tumbler ffmpegthumbnailer file-roller \
 hyprland hypridle hyprlock hyprpaper

echo "###########################################"
echo "working with systemctl and services"
echo "###########################################"
usermod -aG docker $user
newgrp libvirt
usermod -aG libvirt $user

systemctl enable ufw
ufw enable
ufw status verbose
systemctl enable cronie.service
systemctl start cronie.service
systemctl enable apparmor.service
systemctl start apparmor.service
systemctl enable auditd.service
systemctl status auditd.service
systemctl disable libvirtd.service
systemctl disable docker.service
systemctl disable bluetooth.service

groupadd -r audit
gpasswd -a $user audit

echo "###########################################"
echo "cloning repositories"
echo "###########################################"

su $user -c "git clone https://github.com/danieltorrescode/dotfiles.git $home/dotfiles"
su $user -c "git clone https://github.com/danieltorrescode/emacs.git $home/.emacs.d"
su $user -c "git clone https://github.com/romkatv/powerlevel10k $home/powerlevel10k"

echo "###########################################"
echo "setting config files"
echo "###########################################"

if [[ "$user" != "vm" ]]; then
    ln -s $home/dotfiles/config/70-synaptics.conf /etc/X11/xorg.conf.d
    ln -s $home/dotfiles/config/20-amd-gpu.conf /etc/X11/xorg.conf.d
    ln -s $home/dotfiles/config/power.rules  /etc/udev/rules.d
fi

su $user -c "rm $home/.bash_profile"
su $user -c "stow -d $home/dotfiles -t $home config"
su $user -c "chmod 744 -R $home/.scripts"
su $user -c "sed -i '/daniel torres/,\$d' $home/.bashrc"
su $user -c "cat $home/.bashrc_tail >> $home/.bashrc"

rm -rf /dotfiles

echo "#######################################################"
echo "installing paru"
echo "#######################################################"
su $user -c "git clone https://aur.archlinux.org/paru.git $home/paru"
chown -R  $user:$user $home/paru
cd $home/paru
echo "run: makepkg -si"
echo "then run: paru --version"
su $user

echo "###########################################"
echo "end"
date +'%d/%m/%Y %I:%M:%S'
echo "###########################################"
exit
