#!/bin/bash

echo "#######################################################"
echo "updating repositories and installing packages"
echo "#######################################################"
pacman -Syu
pacman -S --needed --noconfirm base-devel curl htop wget stow screen wpa_supplicant dhclient
pacman -S --needed --noconfirm xorg xorg-xinit xf86-input-synaptics xf86-input-libinput xdo clang cmake
pacman -S --needed --noconfirm emacs vim vifm neofetch tmux bash-completion
pacman -S --needed --noconfirm picom feh arandr playerctl pavucontrol pulseaudio
pacman -S --needed --noconfirm bluez bluez-utils blueman pulseaudio-bluetooth
pacman -S --needed --noconfirm dmenu slock zathura mpv imagemagick flameshot
pacman -S --needed --noconfirm python-pip python-virtualenv 
pacman -S --needed --noconfirm udisks2 udiskie acpi numlockx 
pacman -S --needed --noconfirm mutt rtorrent transmission-cli
pacman -S --needed --noconfirm ufw gufw firejail apparmor lxc keepassxc
pacman -S --needed --noconfirm gnu-free-fonts ttf-hack ttf-liberation ttf-ubuntu-font-family
pacman -S --needed --noconfirm pamixer brightnessctl xbacklight mpd mpc
pacman -S --needed --noconfirm xdotool

echo "###########################################"
echo "installing xfce"
echo "###########################################"
pacman -S --needed --noconfirm  xfce4 xfce4-goodies 
pacman -S --needed --noconfirm  lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings 
pacman -S --needed --noconfirm  capitaine-cursors arc-gtk-theme xdg-user-dirs-gtk file-roller network-manager-applet
systemctl enable lightdm -f
cp /etc/lightdm/lightdm.conf /etc/lightdm/lightdm.conf.orig
sed -i 's/#greeter-session=.*/greeter-session=lightdm-gtk-greeter/' /etc/lightdm/lightdm.conf

echo "###########################################"
echo "installing firefox"
echo "###########################################"
pacman -S --needed --noconfirm  firefox

echo "###########################################"
echo "installing containers and virtual machine tools"
echo "###########################################"

pacman -S --needed --noconfirm docker docker-compose
pacman -S --needed --noconfirm qemu-full virt-manager dnsmasq 
# systemctl enable libvirtd.service
# systemctl start libvirtd.service
# systemctl status libvirtd.service

echo "###########################################"
echo "creating virtualenv for python"
echo "###########################################"

pip install --upgrade pip
virtualenv -p python3 /home/daniel/.venv/python

echo "###########################################"
echo "cloning and building packages"
echo "###########################################"

su daniel -c "git clone https://github.com/danieltorrescode/dotfiles.git /home/daniel/dotfiles"
cd /home/daniel/dotfiles
rm /home/daniel/.bash_profile
cp /home/daniel/dotfiles/config/70-synaptics.conf /etc/X11/xorg.conf.d/70-synaptics.conf
cp /home/daniel/dotfiles/config/20-amd-gpu.conf /etc/X11/xorg.conf.d/20-amd-gpu.conf
su daniel -c  "stow shell config"
su daniel -c "chmod 744 -R /home/daniel/scripts"
su daniel -c "bash /home/daniel/scripts/config"

su daniel -c "git clone https://github.com/danieltorrescode/st.git /home/daniel/st"
rm /home/daniel/st/config.h
make -C /home/daniel/st/
make -C /home/daniel/st/ clean install

echo "######################################################"
echo "installing window manager"
echo "XF86_keyboard_symbols complete list:" 
echo "wiki.linuxquestions.org/wiki/XF86_keyboard_symbols"
echo "######################################################"

echo "***** bspwm *****"
pacman -S --needed --noconfirm bspwm sxhkd polybar

echo "***** emacs *****"
su daniel -c "git clone https://github.com/danieltorrescode/emacs.git /home/daniel/.emacs.d"

echo "***** vim *****"
su daniel -c "git clone https://github.com/VundleVim/Vundle.vim.git /home/daniel/.vim/bundle/Vundle.vim"

echo "***** paru *****"
pacman -S --needed --noconfirm go
su daniel -c "git clone https://aur.archlinux.org/paru.git /home/daniel/paru"
chown -R  daniel:daniel /home/daniel/paru
cd /home/daniel/paru
echo "run: makepkg -si"
echo "then run: paru --version"
su daniel
paru -S xinit-xsession google-chrome visual-studio-code-bin
rm -rf /dotfiles
exit
